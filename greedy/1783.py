'''
문제
병든 나이트
nxm의 왼쪽 안에있는 나이트

오른쪾으로 가는 4가지 움직임 가능

방문한 칸의 수를 최대로 하려고 함. 
4번이상 움직이면 모든 방법은 한번씩 써야함
4번 이하면 상관없음 

방문할 수 ㅣㅅ는 최대 칸수

아이디어
n,m이 매우 큼.
시간,
메모리도 부족해보임. 
한번에 답을 구할수 있어보임. 

일단 m을 보고 
1,1에 있으니깐 m-1를 더 오른쪽으로 갈수있음.
근데 m-1이 4 이상이면 2번은 두칸을 가야함. 따라서 m-3칸을 방문할 수 있음.
1,1포함하면 따라서 m-2임.

제약
만약 x+y가 3보다 작으면 못움직임 print(1)
만약 x가 3보다 작으면 1x2만 움직일 수 있음. 따라서 //2

복잡도
n,m --> 20억

'''

n,m = map(int,input().split())

if n==1 :
    print(1)

elif n==2:
    # 1 3 5 7
    if m>=9:
        print(4)
    else :
        print((m-1)//2+1)


else : 
    if m ==5 :
        print(4)
    elif m >= 6: 
        print(m-2)
    else:
        print(m)